# CleaveLand4 Wrapper Script

This Bash script (`cleaveland_wrapper.sh`) provides a comprehensive and user-friendly wrapper for running the [CleaveLand4](https://github.com/Addo-Laboratory/CleaveLand4) pipeline, a tool for analyzing degradome (PARE) data to identify and visualize cleaved small RNA targets.

---

## Features

- **Automated Logging:** All steps, parameters, and errors are logged to a time-stamped file for reproducibility.
- **Detailed Progress Updates:** Real-time monitoring of progress for both small RNA and transcriptome processing.
- **Input Validation:** Checks for the existence and format of all input files before running CleaveLand4.
- **Output Summary:** Consolidates results and provides a summary of cleavage sites and categories detected.
- **Debug Mode:** Prints preview of input files and extra status messages.
- **Result Organization:** Results and log files are organized in a dedicated output directory.

---

## Usage

```bash
./cleaveland_wrapper.sh
```

### **Parameters and Configuration**

- `CLEAVELAND_PATH`: Path to `CleaveLand4.pl`. **You must update this line** in the script to point to your local CleaveLand4 installation.
- `DEGRADOME_FILE`: FASTA file with degradome/PARE reads (default: `degradome_reads.fasta`).
- `SMALL_RNA_FILE`: FASTA file with small RNA reads (default: `Svi_small_reads.fasta`).
- `TRANSCRIPTOME_FILE`: FASTA file with transcriptome data (default: `transcriptome_reads.fasta`).
- `OUTPUT_DIR`: Directory where all output and intermediate files will be stored (default: `cleaveland_results`).
- `DEBUG`: Set to `true` for extra debug output.

You can edit these variables at the top of the script as needed.

---

## Prerequisites

- **CleaveLand4**: Download and install [CleaveLand4](https://github.com/Addo-Laboratory/CleaveLand4) and note the location of `CleaveLand4.pl`.
- **Perl**: Required for running CleaveLand4.
- **Bash**: This script is designed for Linux/Unix environments with Bash shell.

---

## Input Files

Place your input files in the same directory as the script or update the paths in the script variables:

- `degradome_reads.fasta` – Degradome reads in FASTA format
- `Svi_small_reads.fasta` – Small RNA reads in FASTA format
- `transcriptome_reads.fasta` – Transcriptome sequences in FASTA format

---

## Output

- All results are written to the `cleaveland_results` directory (or as configured).
- Key outputs:
  - `cleaveland_output.txt`: Raw output from CleaveLand4.
  - `full_results.txt`: Consolidated summary of results, including cleavage site summaries.
  - PDF T-plot files for visualization, if generated by CleaveLand4.
  - Time-stamped log file detailing the run.

---

## Example Workflow

1. Edit the script to set the correct path for `CLEAVELAND_PATH`.
2. Ensure your input FASTA files are present and named as specified (or update the script variables).
3. Make the script executable:
    ```bash
    chmod +x cleaveland_wrapper.sh
    ```
4. Run the script:
    ```bash
    ./cleaveland_wrapper.sh
    ```
5. Progress will be displayed in the terminal and logged.
6. On completion, check the output directory and log file for results and any messages.

---

## Troubleshooting

- **File Not Found:** Ensure all input files exist and paths are correct.
- **Permissions:** If the CleaveLand4 script is not executable, the wrapper will attempt to fix permissions.
- **No Cleavage Sites:** If no sites are found, check that your input files have matching and valid sequences.
- **Log File:** For any errors, see the generated log file for details and troubleshooting hints.

---

## Citation

If you use this script in your analysis, please cite [CleaveLand4](https://github.com/Addo-Laboratory/CleaveLand4) and this repository:
> deoliveiralf/post-transcriptional-pipeline-scripts

---

## License

See [LICENSE](../LICENSE) in the repository.

---

## Author

[deoliveiralf](https://github.com/deoliveiralf)
